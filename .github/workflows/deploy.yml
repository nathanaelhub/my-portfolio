name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: BRUTE FORCE BUILD for GitHub Pages
        run: npm run build-brute-force
        env:
          NODE_ENV: production

      - name: List all files in /out directory
        run: |
          echo "üîç Complete file listing of /out directory:"
          find out -type f | sort
          echo ""
          echo "üìä Build statistics:"
          echo "Total files: $(find out -type f | wc -l)"
          echo "HTML files: $(find out -name "*.html" -type f | wc -l)"
          echo "Image files: $(find out -name "*.jpg" -o -name "*.png" -o -name "*.gif" | wc -l)"
          echo "Build size: $(du -sh out | cut -f1)"
          
      - name: Ensure critical files exist
        run: |
          # Check for critical HTML files
          echo "üîç Checking critical HTML files:"
          for file in "index.html" "about/index.html" "gallery/index.html" "blog/index.html" "work/index.html" "404.html"; do
            if [ -f "out/$file" ]; then
              echo "‚úÖ Found: $file ($(du -h "out/$file" | cut -f1))"
            else
              echo "‚ùå Missing: $file"
              exit 1
            fi
          done
          
          echo ""
          echo "üñºÔ∏è Checking critical image files:"
          for file in "images/avatar.jpg" "images/gallery/horizontal-1.jpg"; do
            if [ -f "out/$file" ]; then
              echo "‚úÖ Found: $file ($(du -h "out/$file" | cut -f1))"
            else
              echo "‚ùå Missing: $file"
              exit 1
            fi
          done
          
          echo ""
          echo "üìÑ Verifying about/index.html contains expected content:"
          if grep -q "Nathanael" "out/about/index.html"; then
            echo "‚úÖ about/index.html contains 'Nathanael'"
          else
            echo "‚ùå about/index.html missing expected content"
            exit 1
          fi
          
          echo ""
          echo "üìÑ Verifying gallery/index.html contains expected content:"
          if grep -q "gallery" "out/gallery/index.html"; then
            echo "‚úÖ gallery/index.html contains 'gallery'"
          else
            echo "‚ùå gallery/index.html missing expected content"
            exit 1
          fi

      - name: Add .nojekyll file
        run: touch out/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test-deployment:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies for testing
        run: npm ci

      - name: Wait for deployment
        run: sleep 30

      - name: Test deployed routes
        run: |
          echo "üöÄ Testing deployed site routes..."
          npm run test-live || echo "‚ö†Ô∏è Route tests completed with warnings - this is informational only"
        env:
          SITE_URL: https://nathanaelhub.github.io/my-portfolio