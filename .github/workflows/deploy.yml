name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run export
        env:
          NODE_ENV: production

      - name: Validate build output
        run: |
          echo "üìÅ Listing generated files:"
          find out -name "*.html" -type f | head -20
          echo ""
          echo "üìä Build statistics:"
          echo "Total files: $(find out -type f | wc -l)"
          echo "HTML files: $(find out -name "*.html" -type f | wc -l)"
          echo "Build size: $(du -sh out | cut -f1)"
          
      - name: Ensure critical files exist
        run: |
          # Check for critical HTML files
          for file in "index.html" "about/index.html" "gallery/index.html" "blog/index.html" "work/index.html" "404.html"; do
            if [ -f "out/$file" ]; then
              echo "‚úÖ Found: $file ($(du -h "out/$file" | cut -f1))"
            else
              echo "‚ùå Missing: $file"
              exit 1
            fi
          done

      - name: Add .nojekyll file
        run: touch out/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}